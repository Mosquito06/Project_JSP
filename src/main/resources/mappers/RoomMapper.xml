<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Project_JSP.dao.RoomDao">
    
    <resultMap type="Room" id="RoomResult">
        <id property="roomNum" column="room_num"/>
        <result property="roomInfoNum.roomInfoNum" column="room_info_num"/>
        <result property="roomPrice" column="room_price"/>
    </resultMap>
    
    <resultMap type="Room" id="RoomJoinRoomInfoResult">
        <id property="roomNum" column="room_num"/>
       	<result property="roomPrice" column="room_price"/>
   		<association property="roomInfoNum" resultMap="Project_JSP.dao.RoomInfoDao.RoomInfoResult"/>
     </resultMap>
   
    <sql id="selectSql">
        select room_num, room_info_num, room_price from room
    </sql>
    
    <sql id="whereSql">
        <where>
            <if test="roomNum != null">
                room_num = #{roomNum}
            </if>            
        </where>        
    </sql>
    
	<select id="selectRoom" resultMap="RoomResult">
	    <include refid="selectSql"/>	    
	</select>
	
	<select id="selectRoomByNum" parameterType="Room" resultMap="RoomResult">
	    <include refid="selectSql"/>
	    <include refid="whereSql"/>	    
	</select>
	
	<select id="selectRoombyGrade" resultMap="RoomJoinRoomInfoResult">
	    select * from room join room_info on room.room_info_num = room_info.room_info_num
		where room_grade = #{param1} group by room_info_name
	</select>
		
	<select id="selectRoombyGradeAndName" resultMap="RoomJoinRoomInfoResult">
	    select * from room join room_info on room.room_info_num = room_info.room_info_num
		where room_grade = #{param1} and room_info_name = #{param2} order by room_num
	</select>
		
	<select id="selectAvailabilityRoom" resultMap="RoomJoinRoomInfoResult">
	    select room_grade, room_info_name, min(room_price) as room_price, room_size, reservation_img
		from room r join room_info ri on r.room_info_num = ri.room_info_num 
		where room_num not in (select room_num from reservation where check_out <![CDATA[>=]]> #{param1} 
		and check_in <![CDATA[<=]]> #{param2} and reservation_state = "RESERVE") 
		group by room_info_name order by room_price 
	</select>
	
	<select id="selectAvailabilityRoomByRoomNameAndDate" resultMap="RoomJoinRoomInfoResult">
	    select r.room_num, ri.view_type, ri.bed_type, min(room_price) as room_price from room r join room_info ri 
		on r.room_info_num = ri.room_info_num where room_info_name = #{param1} and 
		room_num not in (select room_num from reservation where check_out <![CDATA[>=]]> #{param2} 
		and check_in <![CDATA[<=]]> #{param3} and reservation_state = "RESERVE")
		group by view_type, bed_type order by room_price desc
	</select>
	
	<select id="selectRoomToReservation" resultMap="RoomJoinRoomInfoResult">
	    select r.room_num, ri.view_type, ri.bed_type, room_price from room r join room_info ri 
		on r.room_info_num = ri.room_info_num
		where room_num not in (select room_num from reservation where check_out <![CDATA[>=]]> #{param1} 
		and check_in <![CDATA[<=]]> #{param2} and reservation_state = "RESERVE")
		and room_grade = #{param3} and room_info_name= #{param4} and view_type = #{param5} and bed_type = #{param6}
	</select>
	
	<insert id="insertRoom" parameterType="Room">
	   insert into room(room_info_num, room_price, room_availability) 
	   values(#{roomInfoNum.roomInfoNum}, #{roomPrice}) 
	</insert>
	
	<update id="updateRoom" parameterType="Room">
	    update room set room_info_num = #{roomInfoNum.roomInfoNum}, room_price = #{roomPrice}
	    <include refid="whereSql"/>
	</update>
	
	<delete id="deleteRoom" parameterType="Room">
	    delete from room
	    <include refid="whereSql"/>
	</delete>
    
</mapper>